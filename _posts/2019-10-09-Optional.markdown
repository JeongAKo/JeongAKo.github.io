---
layout: post
title:  "Optional"
date:   2019-10-09 10:30:00
categories: swift
---

#### Optional

옵셔널(Optional)은 스위프트에서 도입된 새로운 개념으로서 언어 차원에서 프로그램의 안전성을 높이기 위해 사용하는 개념입니다.

옵셔널(Optional) 은 값이 없을 수 있는(absent) 상황에 사용하며 Objective-C 에는 없는 개념입니다.

옵셔널의 개념을 한 문장으로 정의하자면 ’nil을 사용할수 있는 타입과 사용할 수 없는 타입을 구분하고，사용할 수 있는 타입을 가리켜 옵셔널 타입(Optional Type)이라고 부른다’라고 할 수 있습니다.

여기서 말하는 nil이란，값이 없음을 의미하는 특수한 값입니다. 정수형의 0이나, 문자열의 ""과는 다른. 말 그대로 순수하게 아무 값도 없다는 것을 의미하죠. 이런 특수성 때문에 nil은 종종 실제 값으로는 처리할수 없는, 무엇인가 문제가 발생했을 때 이를 의미하기 위해 사용됩니다.



#### 옵셔널 바인딩(Optional Binding)



if구문 

guard 구문은 특성상 함수나 메소드에만 사용할 수 있기 때문에 intStr( ) 함수를 정의하고 그 안에 guard 구문을 작성하였습니다. 실제로 앱을 만드는 과정 거의 대부분은 함수로 이루어지기 때문에，guard 구문 을 사용할 여지는 많습니다. 

guard 구문을 사용하더라도 옵셔널 바인딩 방식은 동일합니다. 상수를 선언하고，여기에 옵셔널 값을 대입하는 것이 전부죠.

하지만 사용 용법상 년구문 내에서 옵셔널 바인딩을 사용하는 것과  구분해야 할 필요는 있습니다. if 구문을 사용한옵셔널 바인딩은 단순히 옵셔널 값의 처리 결과에 따라 서로 다른 피드백을 주고 싶을 때 사용합니다. 하지만 guard구문은 조건에 맞지 않
으면 무조건 함수의 실행을 종료시키는 특성이 있기 때문에，실행 흐름상 옵셔널 값이 해제되지
않으면 더 이상 진행이 불가능할 정도로 큰일이 생길 때에만 사용하는 것이 좋습니다.



#### 옵셔널 체이닝(Optional Chaining)

