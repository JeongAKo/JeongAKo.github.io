---
layout: post
title:  " ASCII VS Unicode"
date:   2020-07-17 10:00:00
categories: 기초
---


#### 문자 인코딩

문자를 전자화 하기 위해서 각 문자를 추상적인 숫자와 짝지어 놓고, 그 숫자를 컴퓨터 안에서 저장 처리하기 위해서 컴퓨터가 이해할 수 있도록 숫자를 표현한 방식

- 컴퓨터의 기본 저장 단위는 바이트(byte)이다.

- 1바이트(byte)는 8비트(bit)이다.

- 1byte에는 2의 8승에 해당하는 256개의 고유한 값을 저장할 수 있다.



### 아스키 코드

##### → ASCII (American Standard Code for Information Interchange, 미국 정보 교환 표준 부호) 

초창기의 컴퓨터는 사람과 기계어로만 소통을 했었고, 당연히 사용 과정에 상당한 애로사항을 겪었다. 그래서 어셈블리어 등의 사람이 쓰는 문자를 사용할 필요성이 생겼기 때문에, 라틴 문자와 숫자, 몇몇 특수문자를 128개(2^7, 27)의 코드값에 1:1 대응시키는 법을 고안했고, 이것이 아스키코드입니다. (확장세트에서 256자)

초기에는 8비트 중에서 7비트는 문자를 표현하고 1비트(Parity bit 패리티 비트)는 통신 에러를 감지하기 위해 사용하였습니다.

이름에서도 알 수 있듯이 미국에서 만들었으며, 영문자만을 표현합니다. 그렇기 때문에 유럽, 아랍, 아시아 등에서는 아스키 코드만으로는 컴퓨터에서 문자를 표현할 수 없었습니다.

그래서 각자 아스키 코드를 확장해서(8번째 비트를 사용) 자신만의 문자 인코딩을 만들어서 8비트로 확장한 아스키 코드가 나왔다.(Extened ASCII) 하지만 각자 자신의 문자 인코딩을 사용하게 되면서 통신할 때 문자가 깨지는 현상이 발생했습니다.



그래서 나온것이 유니코드입니다.



### 유니코드

 

전 세계의 문자를 컴퓨터에서 일관되게 표현하고 다룰 수 있도록 설계된 산업 표준입니다. 

유니코드는 문자와 숫자를 매핑해놓은 표준 규약이라고 보면 된다.

ASCII가 1바이트에 문자를 표현했던 것과 달리 2바이트(2의 16승 = 65536)에 전세계의 문자를 표현합니다.

문자를 최대 65,536(2^16)개 까지 표현할 수 있기 때문에 사실상 모든 문자를 표현할 수 있게 된 것이죠.

유니코드의 인코딩 방식으로는 UCS-2, UCS-4, 그리고 UTF-8, UTF-16, UTF-32 등이 있습니다.





https://whatisthenext.tistory.com/103